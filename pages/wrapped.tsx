import { NextPage } from "next";
import Head from "next/head";
import React from "react";
import { useSupabase } from "../lib/hooks/supabase";
import { Memory, MemoryCollection } from "../lib/wrapped";

const DEFAULT_WRAPPED_TITLE = "My Clark 2022 Wrapped";

async function shareWrapped(images: File[]) {
  const shareUrl = window.location.href;
  const accompanyingText = "";

  if (navigator.canShare && navigator.canShare({ files: images })) {
    const shareData = {
      // TODO: An array of scrapbook images generated by server
      files: images,
      text: accompanyingText,
      title: DEFAULT_WRAPPED_TITLE,
      url: shareUrl,
    };
    await navigator.share(shareData);
  } else {
    throw new Error("OS does not support sharing from web.");
  }
}

interface ShareStoryPageProps {
  images: File[];
  onStoryShared: () => void;
}

function ShareStoryPage({ images, onStoryShared }: ShareStoryPageProps) {
  const handleShare = () => {
    shareWrapped(images)
    .then(() => {
      console.debug('Story shared successfully');
    })
    .catch(() => {

    })
  }

  return (
    <div>
      <button onClick={handleShare}></button>
    </div>
  );
}

function ImageMemoryPage() {
  return (
    <div className="h-screen w-screen">
      <div></div>
    </div>
  );
}

interface WrappedStoriesWrapperProps {
  memoryData: MemoryCollection;
  currentMemory: number;
  onMemoryUpdate: (newIndex: number) => void;
}

function memoryToStory(memory: Memory) {
  return (
    <section className="h-full w-full">
      <div>This is a story</div>
    </section>
  );
}

function WrappedStoriesWrapper({
  memoryData,
  currentMemory,
  onMemoryUpdate,
}: WrappedStoriesWrapperProps) {
  const { memories, statistics, generated } = memoryData;

  const stories = memories.map(memoryToStory);
  stories.push()

  const handleStoryUpdate = (newSlide: number) => {
    onMemoryUpdate(newSlide);
  };

  return (
    <div className="h-full w-full">
      {/* TODO: Include story indicator at the top */}
      <section className="lg:max-w-3xl lg:rounded-lg bg-gray-500 mx-auto">
        {stories}
      </section>
      {/* TODO: Implement stepper UX */}
    </div>
  );
}

const WrappedPage: NextPage = () => {
  const [currentMemory, setCurrentMemory] = React.useState(0);
  const [shouldShare, setShouldShare] = React.useState(false);
  React.useEffect(() => {
    if (shouldShare) {
      const images: File[] = [];
      // TODO: Get image from memory-generating API
      shareWrapped(images)
        .then(() => {
          setShouldShare(false);
        })
        .catch(() => {
          console.error("Could not share Clark Wrapped");
        });
    }
  }, [shouldShare]);

  return (
    <>
      <Head>
        <title>Clark Program Wrapped</title>
        <meta
          name="description"
          content="Review what's happened in the 2022 Clark Summer Research Program!"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <header className="p-12 text-4xl font-bold text-center bg-blue-200 dark:bg-blue-800">
        Clark Point Tracker
      </header> */}
      <main className="h-screen w-screen">
        <WrappedStoriesWrapper
          currentStory={currentMemory}
          memoryData={{
            memories: [],
            statistics: [],
            generated: "",
            recommendedShare: "",
          }}
        />
      </main>
    </>
  );
};

export default WrappedPage;
